<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Tribal Spread</title><link>https://yashbhutwala.github.io/tags/kubernetes/</link><description>Recent content in Kubernetes on Tribal Spread</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright Â© 2020, Yash Bhutwala; all rights reserved.</copyright><lastBuildDate>Fri, 18 Sep 2020 10:05:13 -0400</lastBuildDate><atom:link href="https://yashbhutwala.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Ultimate guide to right sizing pods in Kubernetes - Requests, Limits, HPA, VPA</title><link>https://yashbhutwala.github.io/post/2020-09-18-right-sizing/</link><pubDate>Fri, 18 Sep 2020 10:05:13 -0400</pubDate><guid>https://yashbhutwala.github.io/post/2020-09-18-right-sizing/</guid><description>Table of Contents Background Problem Statement Solutions Day 1 Solution Recommendations for initial limits and requests Notes on load testing Day 2 Solution: VPA and its gaps Links Background When it comes to handling scale for a workload, you get 3 knobs in Kubernetes: requests, limits, and replicas. Kubernetes pods specify their CPU and memory needs via resource requests. CPU resources are measured in virtual cores or more commonly in millicores, e.</description></item></channel></rss>